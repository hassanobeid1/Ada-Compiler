DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:50) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:34) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:38) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:52) - Passe 1 OK
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:54) - Passe 2 OK
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:56) - Passe 3 Classes OK
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:28) - verify Main: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:34) - verify Main: end
DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:58) - verify program: end
`> [7, 0] Program
   +> [3, 0] ListDeclClass [List with 1 elements]
   |  []> [3, 0] DeclClass
   |      +> [3, 6] Identifier (MyClass)
   |      |  definition: type defined at [3, 6], type=MyClass
   |      +> [3, 13] Identifier (Object)
   |      |  definition: type (builtin), type=Object
   |      +> ListDeclField [List with 1 elements]
   |      |  []> [4, 6] DeclField
   |      |      +> [4, 2] Identifier (int)
   |      |      |  definition: type (builtin), type=int
   |      |      +> [4, 6] Identifier (a)
   |      |      |  definition: field defined at [4, 6], type=int
   |      |      `> [4, 10] Initialization
   |      |         `> [4, 10] Int (1)
   |      |            type: int
   |      `> ListDeclMethod [List with 0 elements]
   `> [7, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [8, 10] DeclVar
      |      +> [8, 2] Identifier (MyClass)
      |      |  definition: type defined at [3, 6], type=MyClass
      |      +> [8, 10] Identifier (m)
      |      |  definition: variable defined at [8, 10], type=MyClass
      |      `> [8, 10] Initialization
      |         `> [8, 14] New
      |            type: MyClass
      |            `> [8, 18] Identifier (MyClass)
      |               definition: type defined at [3, 6], type=MyClass
      `> [9, 2] ListInst [List with 1 elements]
         []> [9, 2] Attribute
             type: int
             +> [9, 2] Identifier (m)
             |  definition: variable defined at [8, 10], type=MyClass
             `> [9, 4] Identifier (a)
                definition: field defined at [4, 6], type=int
